class m{static#s="--columns";static async perform(a,s,t,c){await this[a.action]?.(a,s,t,c)}static async add_columns(a,s,t,c){const n=await crs.dom.get_element(a,s,t,c),o=await crs.process.getValue(a.args.columns,s,t,c);l(n.columns,o),i(n,this.#s,n.columns),await n.addColumnElements?.(o)}static async remove_columns(a,s,t,c){const n=await crs.dom.get_element(a,s,t,c),o=await crs.process.getValue(a.args.index,s,t,c),e=await crs.process.getValue(a.args.count,s,t,c)||1;n.columns.splice(o,e),i(n,this.#s,n.columns),await n.removeColumnElements?.(o,e)}static async move_columns(a,s,t,c){const n=await crs.dom.get_element(a,s,t,c),o=await crs.process.getValue(a.args.from,s,t,c),e=await crs.process.getValue(a.args.to,s,t,c);await n.moveColumnElement(o,e)}static async clear_columns(a,s,t,c){}static async add_groups(a,s,t,c){const n=await crs.dom.get_element(a,s,t,c),o=await crs.process.getValue(a.args.groups,s,t,c);l(n.columnGroups,o)}static async remove_group(a,s,t,c){const n=await crs.dom.get_element(a,s,t,c),o=await crs.process.getValue(a.args.index,s,t,c),e=await crs.process.getValue(a.args.count,s,t,c)||1;n.columnGroups.splice(o,e)}static async move_group(a,s,t,c){}static async set_width(a,s,t,c){const n=await crs.dom.get_element(a,s,t,c),o=await crs.process.getValue(a.args.index,s,t,c),e=await crs.process.getValue(a.args.width,s,t,c);n.columns[o].width=e}}function l(r,a){for(const s of a)r.push(s)}function i(r,a,s){s=s.map(t=>`${t.width}px`).join(" "),r.style.setProperty(a,s)}crs.intent.grid_columns=m;export{m as ColumnsActions};
